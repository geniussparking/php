***************************
$template['title']='父版块添加页';  // 命名变量规则，一些有类似功能的变量，可以用数组命名，这样简单清晰
$template['css']=array('style/public.css','style/father_module_add.css');  //css这样玩：在body页面这样定义数组
foreach ($template['css'] as $val){
	echo "<link rel='stylesheet' type='text/css' href='{$val}' />";       //在header页面用foreach输出
}
***************************
Warning,超全局变量 $_GET 和 $_REQUEST 已经被解码了。不管传递过来的时候有没有encode,使用$_GET['']输出后都是解码好的。
对 $_GET 或 $_REQUEST 里的元素使用 urldecode() 将会导致不可预计和危险的结果。
***************************
is_numeric — 检测变量是否为数字或数字字符串  注意，这个函数能自动判断，哪怕是string类型的数字，也可以
***************************
strlen($str) 返回字节长度，不是字符个数
mb_strlen($str,$charset) 返回字符数
***************************
检测用户是否已经登录，session相关
function is_login($link){   //检测登录的函数
	if(isset($_COOKIE['sfk']['name']) && isset($_COOKIE['sfk']['pw'])){
		$query="select * from sfk_member where name='{$_COOKIE['sfk']['name']}' and sha1(pw)='{$_COOKIE['sfk']['pw']}'";
		$result=execute($link,$query);
		if(mysqli_num_rows($result)==1){
			$data=mysqli_fetch_assoc($result);
			return $data['id'];
		}else{
			return false;
		}
	}else{
		return false;
	}
}

if(is_login($link)){   //调用函数
	skip('index.php','error','你已经登录，请不要重复注册！');
}

if(isset($_POST['submit'])){    //设置session的部分
	include 'inc/check_register.inc.php';   //注册前检查
	$query="insert into sfk_member(name,pw,register_time) values('{$_POST['name']}',md5('{$_POST['pw']}'),now())";   //注册会员
	execute($link,$query);
	if(mysqli_affected_rows($link)==1){
		setcookie('sfk[name]',$_POST['name']);    //设置
		setcookie('sfk[pw]',sha1(md5($_POST['pw'])));
		skip('index.php','ok','注册成功！');
	}else{
		skip('register.php','eror','注册失败,请重试！');
	}
}
*****************************************
<ul class="postsList">
			<?php 
			$query="select 
sfk_content.title,sfk_content.id,sfk_content.time,sfk_content.times,sfk_member.name,sfk_member.photo,sfk_son_module.module_name 
from sfk_content,sfk_member,sfk_son_module where 
sfk_content.module_id in({$id_son}) and 
sfk_content.member_id=sfk_member.id and 
sfk_content.module_id=sfk_son_module.id";  //多表联合查询
			$result_content=execute($link,$query);
			while($data_content=mysqli_fetch_assoc($result_content)){  //下面的html代码太复杂，php代码可以断开，会自动解析
			?>
			<li>
				<div class="smallPic">
					<a href="#">
						<img width="45" height="45"src="<?php if($data_content['photo']!=''){echo $data_content['photo'];}else{echo 'style/photo.jpg';}?>">
					</a>
				</div>
				<div class="subject">
					<div class="titleWrap"><a href="#">[<?php echo $data_content['module_name']?>]</a>&nbsp;&nbsp;<h2><a href="#"><?php echo $data_content['title']?></a></h2></div>
					<p>
						楼主：<?php echo $data_content['name']?>&nbsp;<?php echo $data_content['time']?>&nbsp;&nbsp;&nbsp;&nbsp;最后回复：2014-12-08
					</p>
				</div>
				<div class="count">
					<p>
						回复<br /><span>41</span>
					</p>
					<p>
						浏览<br /><span><?php echo $data_content['times']?></span>
					</p>
				</div>
				<div style="clear:both;"></div>
			</li>
			<?php 
			}
			?>
		</ul>

---------------------------------------------------------------
分页函数
<?php 
/*
调用：$page=page(100,10,9);
返回值：array('limit','html')
 参数说明：
$count：总记录数
$page_size：每页显示的记录数
$num_btn：要展示的页码按钮数目
$page：分页的get参数
*/
function page($count,$page_size,$num_btn=10,$page='page'){
	if(!isset($_GET[$page]) || !is_numeric($_GET[$page]) || $_GET[$page]<1){
		$_GET[$page]=1;
	}
	//总页数
	$page_num_all=ceil($count/$page_size);
	if($_GET[$page]>$page_num_all){
		$_GET[$page]=$page_num_all;
	}
	$start=($_GET[$page]-1)*$page_size;
	$limit="limit {$start},{$page_size}";

	$current_url=$_SERVER['REQUEST_URI'];//获取当前url地址
	$arr_current=parse_url($current_url);//将当前url拆分到数组里面
	$current_path=$arr_current['path'];//将文件路径部分保存起来
	$url='';
	if(isset($arr_current['query'])){
		parse_str($arr_current['query'],$arr_query);
		unset($arr_query[$page]);
		if(empty($arr_query)){
			$url="{$current_path}?{$page}=";
		}else{
			$other=http_build_query($arr_query);
			$url="{$current_path}?{$other}&{$page}=";
		}
	}else{
		$url="{$current_path}?{$page}=";
	}
	$html=array();
	if($num_btn>=$page_num_all){
		//把所有的页码按钮全部显示
		for($i=1;$i<=$page_num_all;$i++){//这边的$page_num_all是限制循环次数以控制显示按钮数目的变量,$i是记录页码号
			if($_GET[$page]==$i){
				$html[$i]="<span>{$i}</span>";
			}else{
				$html[$i]="<a href='{$url}{$i}'>{$i}</a>";
			}
		}
	}else{
		$num_left=floor(($num_btn-1)/2);
		$start=$_GET[$page]-$num_left;
		$end=$start+($num_btn-1);
		if($start<1){
			$start=1;
		}
		if($end>$page_num_all){
			$start=$page_num_all-($num_btn-1);
		}
		for($i=0;$i<$num_btn;$i++){
			if($_GET[$page]==$start){
				$html[$start]="<span>{$start}</span>";
			}else{
				$html[$start]="<a href='{$url}{$start}'>{$start}</a>";
			}
			$start++;
		}
		//如果按钮数目大于等于3的时候做省略号效果
		if(count($html)>=3){
			reset($html);
			$key_first=key($html);
			end($html);
			$key_end=key($html);
			if($key_first!=1){
				array_shift($html);
				array_unshift($html,"<a href='{$url}=1'>1...</a>");
			}
			if($key_end!=$page_num_all){
				array_pop($html);
				array_push($html,"<a href='{$url}={$page_num_all}'>...{$page_num_all}</a>");
			}
		}
	}
	if($_GET[$page]!=1){
		$prev=$_GET[$page]-1;
		array_unshift($html,"<a href='{$url}{$prev}'>« 上一页</a>");
	}
	if($_GET[$page]!=$page_num_all){
		$next=$_GET[$page]+1;
		array_push($html,"<a href='{$url}{$next}'>下一页 »</a>");
	}
	$html=implode(' ',$html);
	$data=array(
			'limit'=>$limit,
			'html'=>$html
	);
	return $data;
}
?>

